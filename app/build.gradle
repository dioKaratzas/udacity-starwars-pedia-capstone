/*
 * Copyright 2018 Dionysios Karatzas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.apollographql.android'

android {
    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword '159753'
            storeFile file('../swpedia.jks')
            storePassword '159753'
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "eu.dkaratzas.starwarspedia"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 4
        versionName "1.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        // disables sending the Crashlytics mapping file and generating an ID for each build,
        // which speeds up gradle builds of those flavors. (It doesn't disable Crashlytics at run time.)
        debug {
            ext.enableCrashlytics = false
        }
    }
}
apollo {
    customTypeMapping['DateTime'] = "java.util.Date"
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support:support-v4:$androidSupportVersion"
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:recyclerview-v7:$androidSupportVersion"
    implementation "com.android.support:cardview-v7:$androidSupportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation project(':starsgl')
    // Firebase
    implementation 'com.google.firebase:firebase-storage:12.0.1'
    implementation 'com.google.firebase:firebase-auth:12.0.1'
    implementation 'com.google.firebase:firebase-ads:12.0.1'
    // FirebaseUI for Cloud Storage
    implementation 'com.firebaseui:firebase-ui-storage:3.3.0'
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    // Butter Knife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // Apollo
    implementation 'com.apollographql.apollo:apollo-runtime:0.5.0'
    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.0'
    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    // AVLoadingIndicatorView
    implementation 'com.wang.avi:library:2.1.3'
    // Fabric Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.3@aar') {
        transitive = true;
    }
    // Android In-App Billing v3 Library
    implementation 'com.anjlab.android.iab.v3:library:1.0.44'
    
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.github.khirr:Android-Privacy-Policy:1.0.1'

}

apply plugin: 'com.google.gms.google-services'
